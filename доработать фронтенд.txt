✅ Доработки фронтенда Bloody_2
1. API-интеграция
 После логина вызывать /me, чтобы получить полную информацию о пользователе.

 Изменить /login, чтобы он сразу возвращал:

json
Копировать
Редактировать
{
  "nickname": "...",
  "level": 1,
  "location_id": 1,
  "hp": 30,
  "mp": 10
}
 После регистрации (успешной) сразу выполнять переход в авторизованное состояние — т.е. либо:

вызвать /me и загрузить главную страницу игры,

либо сразу использовать полученные данные (если вернутся из /register).

 Добавить вызов /logout и реализацию кнопки "Выход":

вызывать /logout

очищать стейт клиента

возвращать пользователя на форму входа

2. Безопасность
 После логина/регистрации очищать поля пароля (password, confirm_password) в DOM.

 На клиенте:

Ограничить username и nickname по длине (например, 3–20 символов).

Запретить символы <, >, ", ', ;, пробелы.

 Проверять email на корректный формат до отправки.

 Проверять сложность пароля:

минимум 8 символов

хотя бы одна цифра

хотя бы одна буква

 Не использовать localStorage или sessionStorage — только сессионные cookie (credentials: 'include' уже используется — оставить).

3. UI / UX
 Обернуть поля и кнопки в <form> и использовать <button type="submit">, чтобы можно было нажимать Enter.

 Добавить <label> или aria-label к каждому полю (username, email, nickname, password, confirm_password).

 Добавить фокус/перенос к сообщению об ошибке (или aria-live для доступности).

 При отправке формы:

временно дизейблить кнопку

показывать спиннер или индикатор загрузки

 Сделать форму адаптивной:

вместо width: 300px использовать max-width: 90%, min-width: 280px, margin: auto

медиазапросы для небольших экранов

 Очищать ошибки при повторном вводе или переключении между входом и регистрацией.

 Визуально подсвечивать поля с ошибками (например, рамка border-color: red).

 Добавить небольшую анимацию при ошибке (например, "встряска" формы).

4. Кодовая чистота
 Удалить:

logo.gif

vite.svg

App.css (если не используется)

упоминание style.css в index.html (если файла нет)

 Обновить README.md в frontend/:

кратко описать: как установить зависимости, как запустить

какие API используются

структура проекта (компоненты, стили и т.д.)